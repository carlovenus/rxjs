let of,count;_0c5‍.w("rxjs",[["of",["of"],function(v){of=v}]]);_0c5‍.w("rxjs/operators",[["count",["count"],function(v){count=v}]]);


let all_nums = of(1, 7, 5, 10, 10, 20);
let final_val = all_nums.pipe(count());
final_val.subscribe(x => _0c5‍.g.console.log("The count is "+x));


let all_nums_2 = of(1, 7, 5, 10, 10, 20);
let final_val_2 = all_nums_2.pipe(count());
let test = final_val_2.subscribe(x => _0c5‍.g.console.log("The count is "+x));
_0c5‍.g.console.log(test)
setTimeout(() => {
    // Unsubscribes BOTH subscription and childSubscription
    test.unsubscribe();
    _0c5‍.g.console.log(test)
}, 1000);